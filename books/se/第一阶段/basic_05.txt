1.数组
	1.1 什么是数组?
		相同数据类型的元素组成的集合
	1.2 数组的定义
		a)语法：
			数据类型[] 数组名    =  new 数组类型[数组长度];
			  int[]   arr  =  new int[10];
			     -int表示的是数组元素的类型，也就是说arr数组中每一个元素都只能是int类型
			     -arr称为数组的引用
			     -10表示数组的长度，即数组中元素的个数
		b)注：
			-执行new关键字时才使得数组分配到了指定大小的空间
			-int[] arr(推荐写法)与int arr[](C++写法，java不推荐)都可以
			-声明数组时不规定数组长度，new关键字分配空间时需要指定分配的空间大小
	1.3 数组的初始化
		a)动态初始化(可以声明同时初始化，也可以先声明再初始化。)
			i)
				int[] arr = new int[]{1,3,4,2,6};
				元素个数即为数组的长度
		    ii) 
		    	int[] arr;
		    	arr = new int[5];
		    	数组的长度为5，数组中每个元素的类型都是int型，默认值为0
		b)静态初始化(只能声明同时进行初始化)
			int[] arr = {1,3,5,6};
			元素个数即为数组的长度
		c)注：数组创建后，每个元素都有默认值，基本类型byte,short,int,long默认值为0，
		   char类型的默认值为ASCII为0的字符，float和double默认值为0.0,
		   boolean类型默认值为false，引用类型默认值为null
	1.4 数组的访问
		a)获取数组的长度(也就是数组中元素的个数)
			通过数组引用的length属性来获取(如arr.length)
		b)通过数组的下标访问数组元素
			注：数组下标从0开始，最大到数组长度-1
		c)遍历数组元素
			int[] arr = new int[]{2,5,23,45};
			for (int i=0;i<arr.length;i++){
				System.out.println(arr[i]);
			}
	1.5 练习：随机生成10个1-100内的元素的数组，找出这个数组中最大的元素并输出	
	1.6 数组的复制
		a)System.arraycopy(src,srcPos,dest,destPos,length);
			-src:源数组
			-srcPos:源数组中的起始位置
			-dest:目标数组
			-destPos:目标数组的起始位置
			-length:复制的数组长度
		b)Arrays.copyOf(src,newLength);
			数组类型[] newArray = Arrays.copyOf(源数组，新数组的长度);
			特点：生成的新数组是源数组的副本
				若新数组的长度小于源数组的长度，则进行截取
				若新数组的长度大于源数组的长度，则用0或null进行填充
			如：
				int[] a = new int[]{1,2,3,4,5};
				int[] a1 = Arrays.copyOf(a,6);//1,2,3,4,5,0
	1.7 练习：随机生成10个1-100内的元素的数组，找出这个数组中最大的元素，并将最大元素放在
			      数组最后一个元素的下一个位置上
	1.8 数组排序
		a)排序是对数组施加的最常用的算法
		b)所谓排序，是指将数组元素按照从小到大或从大到小的顺序重新排列
		c)常用的排序算法有：冒泡排序，快速排序等
			i)冒泡排序：
				-原则：比较相邻的两个元素，如果违反最后的顺序准则，则交换
				(简易之：第一次找到最大的元素放到最后一个位置上，不再变动，
				       第二次在找到剩余元素中最大的元素放在倒数第二个位置上，以此类推，直到排序完成)
				-练习：生成10个1~100内的随机数，使用冒泡完成排序功能
			ii)快速排序：
				Arrays.sort(arr);
	1.9 练习：实现双色球功能(6个红球，1~33号，不重复，并且排序，1个篮球，1~16号)
				
